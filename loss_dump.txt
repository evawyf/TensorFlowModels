2021-07-07 20:21:15.489318: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
2021-07-07 20:21:16.651193: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-07-07 20:21:16.651854: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcuda.so.1
2021-07-07 20:21:16.697090: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:65:00.0 name: GeForce RTX 2070 SUPER computeCapability: 7.5
coreClock: 1.77GHz coreCount: 40 deviceMemorySize: 7.79GiB deviceMemoryBandwidth: 417.29GiB/s
2021-07-07 20:21:16.697136: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
2021-07-07 20:21:16.699099: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.11
2021-07-07 20:21:16.699172: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.11
2021-07-07 20:21:16.699975: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-07-07 20:21:16.700188: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-07-07 20:21:16.702255: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-07-07 20:21:16.702770: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.11
2021-07-07 20:21:16.702861: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.8
2021-07-07 20:21:16.703812: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-07-07 20:21:16.704158: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2021-07-07 20:21:16.704822: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-07-07 20:21:16.705339: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:65:00.0 name: GeForce RTX 2070 SUPER computeCapability: 7.5
coreClock: 1.77GHz coreCount: 40 deviceMemorySize: 7.79GiB deviceMemoryBandwidth: 417.29GiB/s
2021-07-07 20:21:16.705357: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
2021-07-07 20:21:16.705377: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.11
2021-07-07 20:21:16.705385: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.11
2021-07-07 20:21:16.705393: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-07-07 20:21:16.705401: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-07-07 20:21:16.705408: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-07-07 20:21:16.705416: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.11
2021-07-07 20:21:16.705424: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.8
2021-07-07 20:21:16.706254: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-07-07 20:21:16.706276: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.11.0
2021-07-07 20:21:17.087096: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-07-07 20:21:17.087136: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-07-07 20:21:17.087142: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-07-07 20:21:17.088344: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 6839 MB memory) -> physical GPU (device: 0, name: GeForce RTX 2070 SUPER, pci bus id: 0000:65:00.0, compute capability: 7.5)
I0707 20:21:17.762020 140034628364096 train_utils.py:285] Final experiment parameters: {'runtime': {'all_reduce_alg': None,
             'batchnorm_spatial_persistent': False,
             'dataset_num_private_threads': None,
             'default_shard_dim': -1,
             'distribution_strategy': 'mirrored',
             'enable_xla': False,
             'gpu_thread_mode': None,
             'loss_scale': None,
             'mixed_precision_dtype': 'float16',
             'num_cores_per_replica': 1,
             'num_gpus': 1,
             'num_packs': 1,
             'per_gpu_thread_count': 0,
             'run_eagerly': False,
             'task_index': -1,
             'tpu': None,
             'worker_hosts': None},
 'task': {'annotation_file': None,
          'darknet_load_decoder': True,
          'gradient_clip_norm': 0.0,
          'init_checkpoint': '',
          'init_checkpoint_modules': None,
          'load_darknet_weights': True,
          'model': {'base': {'type': None},
                    'boxes': ['[12.0, 16.0]',
                              '[19.0, 36.0]',
                              '[40.0, 28.0]',
                              '[36.0, 75.0]',
                              '[76.0, 55.0]',
                              '[72.0, 146.0]',
                              '[142.0, 110.0]',
                              '[192.0, 243.0]',
                              '[459.0, 401.0]'],
                    'boxes_per_scale': 3,
                    'filter': {'anchor_generation_scale': 512,
                               'cls_normalizer': {'3': 1.0,
                                                  '4': 1.0,
                                                  '5': 1.0,
                                                  'all': 0.5},
                               'darknet': None,
                               'ignore_thresh': {'3': 0.7,
                                                 '4': 0.7,
                                                 '5': 0.7,
                                                 'all': None},
                               'iou_normalizer': {'3': 0.75,
                                                  '4': 0.75,
                                                  '5': 0.75,
                                                  'all': 0.05},
                               'iou_thresh': 0.1,
                               'label_smoothing': 0.0,
                               'loss_type': {'3': 'ciou',
                                             '4': 'ciou',
                                             '5': 'ciou',
                                             'all': 'ciou'},
                               'max_boxes': 200,
                               'max_delta': {'3': inf,
                                             '4': inf,
                                             '5': inf,
                                             'all': None},
                               'max_level': 5,
                               'min_level': 3,
                               'new_cords': {'3': True,
                                             '4': True,
                                             '5': True,
                                             'all': True},
                               'nms_thresh': 0.65,
                               'nms_type': 'greedy',
                               'obj_normalizer': {'3': 4.0,
                                                  '4': 1.0,
                                                  '5': 0.4,
                                                  'all': None},
                               'objectness_smooth': {'3': 0.0,
                                                     '4': 0.0,
                                                     '5': 0.0,
                                                     'all': 1.0},
                               'path_scales': {'3': 8, '4': 16, '5': 32},
                               'pre_nms_points': 5000,
                               'scale_xy': {'3': 2.0,
                                            '4': 2.0,
                                            '5': 2.0,
                                            'all': 2.0},
                               'truth_thresh': {'3': 1.0,
                                                '4': 1.0,
                                                '5': 1.0,
                                                'all': None},
                               'use_scaled_loss': True},
                    'input_size': [640, 640, 3],
                    'max_level': 5,
                    'min_level': 3,
                    'norm_activation': {'activation': 'mish',
                                        'norm_epsilon': 0.001,
                                        'norm_momentum': 0.99,
                                        'use_sync_bn': True},
                    'num_classes': 80,
                    'smart_bias': True,
                    'subdivisions': 1},
          'per_category_metrics': False,
          'smart_bias_lr': 0.1,
          'train_data': {'block_length': 1,
                         'cache': False,
                         'cycle_length': None,
                         'decoder': {'simple_decoder': {'regenerate_source_id': False},
                                     'type': 'simple_decoder'},
                         'deterministic': None,
                         'drop_remainder': True,
                         'dtype': 'float16',
                         'enable_tf_data_service': False,
                         'global_batch_size': 1,
                         'input_path': '',
                         'is_training': False,
                         'parser': {'anchor_thresh': 0.2,
                                    'area_thresh': 0.1,
                                    'aug_rand_angle': 0.0,
                                    'aug_rand_brightness': 1.5,
                                    'aug_rand_hue': 0.1,
                                    'aug_rand_saturation': 1.7,
                                    'aug_rand_translate': 0.1,
                                    'aug_scale_max': 1.9,
                                    'aug_scale_min': 0.1,
                                    'jitter': 0.0,
                                    'jitter_mosaic': 0.0,
                                    'letter_box': True,
                                    'max_num_instances': 200,
                                    'mosaic': {'aspect_ratio_mode': 'crop',
                                               'aug_scale_max': None,
                                               'aug_scale_min': None,
                                               'crop_area': [0.25, 1.0],
                                               'crop_area_mosaic': [0.1, 1.9],
                                               'jitter': 0.4,
                                               'max_resolution': 640,
                                               'mosaic_crop_mode': 'scale',
                                               'mosaic_frequency': 1.0,
                                               'output_resolution': [640, 640],
                                               'resize': None},
                                    'mosaic_scale_max': 1.0,
                                    'mosaic_scale_min': 1.0,
                                    'random_flip': True,
                                    'random_pad': True,
                                    'resize': 1.0,
                                    'resize_mosaic': 1.0,
                                    'sheer': 0.0,
                                    'use_scale_xy': True,
                                    'use_tie_breaker': True},
                         'sharding': True,
                         'shuffle_buffer_size': 2,
                         'tf_data_service_address': None,
                         'tf_data_service_job_name': None,
                         'tfds_as_supervised': False,
                         'tfds_data_dir': '/media/vbanna/DATA_SHARE/CV/datasets/tensorflow',
                         'tfds_download': True,
                         'tfds_name': 'coco',
                         'tfds_skip_decoding_feature': '',
                         'tfds_split': 'train'},
          'validation_data': {'block_length': 1,
                              'cache': False,
                              'cycle_length': None,
                              'decoder': {'simple_decoder': {'regenerate_source_id': False},
                                          'type': 'simple_decoder'},
                              'deterministic': None,
                              'drop_remainder': True,
                              'dtype': 'float16',
                              'enable_tf_data_service': False,
                              'global_batch_size': 1,
                              'input_path': '',
                              'is_training': False,
                              'parser': {'anchor_thresh': 4.0,
                                         'area_thresh': 0.1,
                                         'aug_rand_angle': 0.0,
                                         'aug_rand_brightness': 0.0,
                                         'aug_rand_hue': 0.0,
                                         'aug_rand_saturation': 0.0,
                                         'aug_rand_translate': 0.0,
                                         'aug_scale_max': 1.0,
                                         'aug_scale_min': 1.0,
                                         'jitter': 0.0,
                                         'jitter_mosaic': 0.0,
                                         'letter_box': True,
                                         'max_num_instances': 200,
                                         'mosaic': {'aspect_ratio_mode': 'crop',
                                                    'aug_scale_max': None,
                                                    'aug_scale_min': None,
                                                    'crop_area': [0.2, 1.0],
                                                    'crop_area_mosaic': [1.0,
                                                                         1.0],
                                                    'jitter': None,
                                                    'max_resolution': 640,
                                                    'mosaic_crop_mode': 'crop_scale',
                                                    'mosaic_frequency': 0.75,
                                                    'output_resolution': None,
                                                    'resize': None},
                                         'mosaic_scale_max': 1.0,
                                         'mosaic_scale_min': 1.0,
                                         'random_flip': True,
                                         'random_pad': True,
                                         'resize': 1.0,
                                         'resize_mosaic': 1.0,
                                         'sheer': 0.0,
                                         'use_scale_xy': True,
                                         'use_tie_breaker': True},
                              'sharding': True,
                              'shuffle_buffer_size': 2,
                              'tf_data_service_address': None,
                              'tf_data_service_job_name': None,
                              'tfds_as_supervised': False,
                              'tfds_data_dir': '/media/vbanna/DATA_SHARE/CV/datasets/tensorflow',
                              'tfds_download': True,
                              'tfds_name': 'coco',
                              'tfds_skip_decoding_feature': '',
                              'tfds_split': 'validation'},
          'weight_decay': 0.0005},
 'trainer': {'allow_tpu_summary': False,
             'best_checkpoint_eval_metric': '',
             'best_checkpoint_export_subdir': '',
             'best_checkpoint_metric_comp': 'higher',
             'checkpoint_interval': 10000,
             'continuous_eval_timeout': 3600,
             'eval_tf_function': True,
             'eval_tf_while_loop': False,
             'loss_upper_bound': 1000000.0,
             'max_to_keep': 5,
             'optimizer_config': {'ema': None,
                                  'learning_rate': {'cosine': {'alpha': 0.2,
                                                               'decay_steps': 370000,
                                                               'initial_learning_rate': 0.01,
                                                               'name': 'Cosine'},
                                                    'type': 'cosine'},
                                  'optimizer': {'sgd': {'clipnorm': None,
                                                        'clipvalue': None,
                                                        'decay': 0.0,
                                                        'global_clipnorm': None,
                                                        'momentum': 0.937,
                                                        'name': 'SGD',
                                                        'nesterov': True},
                                                'type': 'sgd'},
                                  'warmup': {'linear': {'name': 'linear',
                                                        'warmup_learning_rate': 0,
                                                        'warmup_steps': 5625},
                                             'type': 'linear'}},
             'recovery_begin_steps': 0,
             'recovery_max_trials': 0,
             'steps_per_loop': 10000,
             'summary_interval': 10000,
             'train_steps': 375625,
             'train_tf_function': True,
             'train_tf_while_loop': True,
             'validation_interval': 20000,
             'validation_steps': 5000}}
2021-07-07 20:21:17.762525: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
INFO:tensorflow:Mixed precision compatibility check (mixed_float16): OK
Your GPU will likely run quickly with dtype policy mixed_float16 as it has compute capability of at least 7.0. Your GPU: GeForce RTX 2070 SUPER, compute capability 7.5
I0707 20:21:17.763063 140034628364096 device_compatibility_check.py:120] Mixed precision compatibility check (mixed_float16): OK
Your GPU will likely run quickly with dtype policy mixed_float16 as it has compute capability of at least 7.0. Your GPU: GeForce RTX 2070 SUPER, compute capability 7.5
INFO:tensorflow:Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)
I0707 20:21:17.764669 140034628364096 mirrored_strategy.py:350] Using MirroredStrategy with devices ('/job:localhost/replica:0/task:0/device:GPU:0',)
I0707 20:21:17.765462 140034628364096 train_utils.py:214] Running default trainer.
2021-07-07 20:21:17.771362: W tensorflow/python/util/util.cc:348] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:17.928819 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:17.929637 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:17.930759 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:17.931197 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:17.932228 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:17.934022 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:18.012694 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:18.013335 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:18.014188 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
INFO:tensorflow:Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
I0707 20:21:18.014625 140034628364096 cross_device_ops.py:563] Reduce to /job:localhost/replica:0/task:0/device:CPU:0 then broadcast to ('/job:localhost/replica:0/task:0/device:CPU:0',).
Traceback (most recent call last):
  File "/usr/lib/python3.8/runpy.py", line 194, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/vbanna/Research/TensorFlowModels/yolo/train.py", line 157, in <module>
    app.run(main)
  File "/home/vbanna/.local/lib/python3.8/site-packages/absl/app.py", line 300, in run
    _run_main(main, args)
  File "/home/vbanna/.local/lib/python3.8/site-packages/absl/app.py", line 251, in _run_main
    sys.exit(main(argv))
  File "/home/vbanna/Research/TensorFlowModels/yolo/train.py", line 144, in main
    train_lib.run_experiment(
  File "/home/vbanna/Research/TensorFlowModels/official/core/train_lib.py", line 62, in run_experiment
    trainer = train_utils.create_trainer(
  File "/home/vbanna/.local/lib/python3.8/site-packages/gin/config.py", line 1046, in gin_wrapper
    return fn(*new_args, **new_kwargs)
  File "/home/vbanna/Research/TensorFlowModels/official/core/train_utils.py", line 215, in create_trainer
    model = task.build_model()
  File "/home/vbanna/Research/TensorFlowModels/yolo/tasks/yolo.py", line 114, in build_model
    model, losses = build_yolo(input_specs, model_base_cfg, l2_regularizer,
  File "/home/vbanna/Research/TensorFlowModels/yolo/modeling/factory.py", line 134, in build_yolo
    backbone = build_darknet(input_specs, model_config,
  File "/home/vbanna/Research/TensorFlowModels/yolo/modeling/backbones/darknet.py", line 655, in build_darknet
    model = Darknet(
  File "/home/vbanna/Research/TensorFlowModels/yolo/modeling/backbones/darknet.py", line 412, in __init__
    output = self._build_struct(layer_specs, inputs)
  File "/home/vbanna/Research/TensorFlowModels/yolo/modeling/backbones/darknet.py", line 448, in _build_struct
    x = self._csp_stack(
  File "/home/vbanna/Research/TensorFlowModels/yolo/modeling/backbones/darknet.py", line 503, in _csp_stack
    x = nn_blocks.DarkResidual(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 951, in __call__
    return self._functional_construction_call(inputs, args, kwargs,
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 1090, in _functional_construction_call
    outputs = self._keras_tensor_symbolic_call(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 822, in _keras_tensor_symbolic_call
    return self._infer_output_signature(inputs, args, kwargs, input_masks)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 863, in _infer_output_signature
    outputs = call_fn(inputs, *args, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/autograph/impl/api.py", line 667, in wrapper
    return converted_call(f, args, kwargs, options=options)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/autograph/impl/api.py", line 459, in converted_call
    result = converted_f(*effective_args, **kwargs)
  File "/tmp/tmpyoo1__9w.py", line 27, in tf__call
    x = ag__.converted_call(ag__.ld(self)._conv2, (ag__.ld(x),), None, fscope)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/autograph/impl/api.py", line 396, in converted_call
    return _call_unconverted(f, args, kwargs, options)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/autograph/impl/api.py", line 479, in _call_unconverted
    return f(*args)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 1012, in __call__
    outputs = call_fn(inputs, *args, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/autograph/impl/api.py", line 667, in wrapper
    return converted_call(f, args, kwargs, options=options)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/autograph/impl/api.py", line 459, in converted_call
    result = converted_f(*effective_args, **kwargs)
  File "/tmp/tmpwbn9lhd7.py", line 26, in tf__call
    x = ag__.converted_call(ag__.ld(self).conv, (ag__.ld(x),), None, fscope)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/autograph/impl/api.py", line 396, in converted_call
    return _call_unconverted(f, args, kwargs, options)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/autograph/impl/api.py", line 479, in _call_unconverted
    return f(*args)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 1008, in __call__
    self._maybe_build(inputs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 2710, in _maybe_build
    self.build(input_shapes)  # pylint:disable=not-callable
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/layers/convolutional.py", line 198, in build
    self.kernel = self.add_weight(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 623, in add_weight
    variable = self._add_variable_with_custom_getter(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/training/tracking/base.py", line 805, in _add_variable_with_custom_getter
    new_variable = getter(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py", line 613, in getter
    variable = old_getter(*args, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer_utils.py", line 130, in make_variable
    return tf_variables.VariableV1(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/variables.py", line 260, in __call__
    return cls._variable_v1_call(*args, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/variables.py", line 206, in _variable_v1_call
    return previous_getter(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/variables.py", line 67, in getter
    return captured_getter(captured_previous, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/distribute/distribute_lib.py", line 2083, in creator_with_resource_vars
    created = self._create_variable(next_creator, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/distribute/mirrored_strategy.py", line 486, in _create_variable
    return distribute_utils.create_mirrored_variable(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/distribute/distribute_utils.py", line 311, in create_mirrored_variable
    value_list = real_mirrored_creator(**kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/distribute/mirrored_strategy.py", line 481, in _real_mirrored_creator
    v = next_creator(**kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/variables.py", line 199, in <lambda>
    previous_getter = lambda **kwargs: default_variable_creator(None, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/variable_scope.py", line 2604, in default_variable_creator
    return resource_variable_ops.ResourceVariable(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/variables.py", line 264, in __call__
    return super(VariableMetaclass, cls).__call__(*args, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 1574, in __init__
    self._init_from_args(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/resource_variable_ops.py", line 1712, in _init_from_args
    initial_value = initial_value()
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/keras/initializers/initializers_v2.py", line 409, in __call__
    return super(VarianceScaling, self).__call__(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/init_ops_v2.py", line 600, in __call__
    return self._random_generator.random_uniform(shape, -limit, limit, dtype)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/init_ops_v2.py", line 1081, in random_uniform
    return op(
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/util/dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/ops/random_ops.py", line 295, in random_uniform
    minval = ops.convert_to_tensor(minval, dtype=dtype, name="min")
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/profiler/trace.py", line 163, in wrapped
    return func(*args, **kwargs)
  File "/home/vbanna/.local/lib/python3.8/site-packages/tensorflow/python/framework/ops.py", line 1517, in convert_to_tensor
    overload = getattr(type(value), "__tf_tensor__", None)
KeyboardInterrupt

!--PREPPING GPU--! 
1 Physical GPUs, 1 Logical GPUs
yolo_custom
{'task': {'init_checkpoint': '', 'model': {'num_classes': 80, 'input_size': [640, 640, 3], 'min_level': 3, 'max_level': 5, 'boxes_per_scale': 3, 'base': {'type': None}, 'subdivisions': 1, 'filter': {'min_level': 3, 'max_level': 5, 'ignore_thresh': {'3': 0.7, '4': 0.7, '5': 0.7, 'all': None}, 'truth_thresh': {'3': 1.0, '4': 1.0, '5': 1.0, 'all': None}, 'loss_type': {'3': 'ciou', '4': 'ciou', '5': 'ciou', 'all': 'ciou'}, 'iou_normalizer': {'3': 0.75, '4': 0.75, '5': 0.75, 'all': 0.05}, 'cls_normalizer': {'3': 1.0, '4': 1.0, '5': 1.0, 'all': 0.5}, 'obj_normalizer': {'3': 4.0, '4': 1.0, '5': 0.4, 'all': None}, 'max_delta': {'3': inf, '4': inf, '5': inf, 'all': None}, 'new_cords': {'3': True, '4': True, '5': True, 'all': True}, 'scale_xy': {'3': 2.0, '4': 2.0, '5': 2.0, 'all': 2.0}, 'path_scales': {'3': 8, '4': 16, '5': 32}, 'objectness_smooth': {'3': 0.0, '4': 0.0, '5': 0.0, 'all': 1.0}, 'nms_type': 'greedy', 'iou_thresh': 0.1, 'nms_thresh': 0.65, 'max_boxes': 200, 'pre_nms_points': 5000, 'label_smoothing': 0.0, 'anchor_generation_scale': 512, 'use_scaled_loss': True, 'darknet': None}, 'norm_activation': {'activation': 'mish', 'use_sync_bn': True, 'norm_momentum': 0.99, 'norm_epsilon': 0.001}, 'boxes': ['[12.0, 16.0]', '[19.0, 36.0]', '[40.0, 28.0]', '[36.0, 75.0]', '[76.0, 55.0]', '[72.0, 146.0]', '[142.0, 110.0]', '[192.0, 243.0]', '[459.0, 401.0]'], 'smart_bias': True}, 'train_data': {'input_path': '', 'tfds_name': 'coco', 'tfds_split': 'train', 'global_batch_size': 1, 'is_training': False, 'drop_remainder': True, 'shuffle_buffer_size': 2, 'cache': False, 'cycle_length': None, 'block_length': 1, 'deterministic': None, 'sharding': True, 'enable_tf_data_service': False, 'tf_data_service_address': None, 'tf_data_service_job_name': None, 'tfds_data_dir': '/media/vbanna/DATA_SHARE/CV/datasets/tensorflow', 'tfds_download': True, 'tfds_as_supervised': False, 'tfds_skip_decoding_feature': '', 'dtype': 'float16', 'decoder': {'type': 'simple_decoder', 'simple_decoder': {'regenerate_source_id': False}}, 'parser': {'max_num_instances': 200, 'letter_box': True, 'random_flip': True, 'random_pad': True, 'jitter': 0.0, 'resize': 1.0, 'jitter_mosaic': 0.0, 'resize_mosaic': 1.0, 'sheer': 0.0, 'aug_rand_angle': 0.0, 'aug_rand_translate': 0.1, 'aug_rand_saturation': 1.7, 'aug_rand_brightness': 1.5, 'aug_rand_hue': 0.1, 'aug_scale_min': 0.1, 'aug_scale_max': 1.9, 'mosaic_scale_min': 1.0, 'mosaic_scale_max': 1.0, 'use_tie_breaker': True, 'use_scale_xy': True, 'anchor_thresh': 0.2, 'area_thresh': 0.1, 'mosaic': {'max_resolution': 640, 'mosaic_frequency': 1.0, 'crop_area': [0.25, 1.0], 'crop_area_mosaic': [0.1, 1.9], 'aspect_ratio_mode': 'crop', 'mosaic_crop_mode': 'scale', 'aug_scale_min': None, 'aug_scale_max': None, 'jitter': 0.4, 'resize': None, 'output_resolution': [640, 640]}}}, 'validation_data': {'input_path': '', 'tfds_name': 'coco', 'tfds_split': 'validation', 'global_batch_size': 1, 'is_training': False, 'drop_remainder': True, 'shuffle_buffer_size': 2, 'cache': False, 'cycle_length': None, 'block_length': 1, 'deterministic': None, 'sharding': True, 'enable_tf_data_service': False, 'tf_data_service_address': None, 'tf_data_service_job_name': None, 'tfds_data_dir': '/media/vbanna/DATA_SHARE/CV/datasets/tensorflow', 'tfds_download': True, 'tfds_as_supervised': False, 'tfds_skip_decoding_feature': '', 'dtype': 'float16', 'decoder': {'type': 'simple_decoder', 'simple_decoder': {'regenerate_source_id': False}}, 'parser': {'max_num_instances': 200, 'letter_box': True, 'random_flip': True, 'random_pad': True, 'jitter': 0.0, 'resize': 1.0, 'jitter_mosaic': 0.0, 'resize_mosaic': 1.0, 'sheer': 0.0, 'aug_rand_angle': 0.0, 'aug_rand_translate': 0.0, 'aug_rand_saturation': 0.0, 'aug_rand_brightness': 0.0, 'aug_rand_hue': 0.0, 'aug_scale_min': 1.0, 'aug_scale_max': 1.0, 'mosaic_scale_min': 1.0, 'mosaic_scale_max': 1.0, 'use_tie_breaker': True, 'use_scale_xy': True, 'anchor_thresh': 4.0, 'area_thresh': 0.1, 'mosaic': {'max_resolution': 640, 'mosaic_frequency': 0.75, 'crop_area': [0.2, 1.0], 'crop_area_mosaic': [1.0, 1.0], 'aspect_ratio_mode': 'crop', 'mosaic_crop_mode': 'crop_scale', 'aug_scale_min': None, 'aug_scale_max': None, 'jitter': None, 'resize': None, 'output_resolution': None}}}, 'weight_decay': 0.0005, 'annotation_file': None, 'gradient_clip_norm': 0.0, 'per_category_metrics': False, 'load_darknet_weights': True, 'darknet_load_decoder': True, 'init_checkpoint_modules': None, 'smart_bias_lr': 0.1}, 'trainer': {'optimizer_config': {'optimizer': {'type': 'sgd', 'sgd': {'clipnorm': None, 'clipvalue': None, 'global_clipnorm': None, 'name': 'SGD', 'decay': 0.0, 'nesterov': True, 'momentum': 0.937}}, 'ema': None, 'learning_rate': {'type': 'cosine', 'cosine': {'name': 'Cosine', 'initial_learning_rate': 0.01, 'decay_steps': 370000, 'alpha': 0.2}}, 'warmup': {'type': 'linear', 'linear': {'name': 'linear', 'warmup_learning_rate': 0, 'warmup_steps': 5625}}}, 'train_tf_while_loop': True, 'train_tf_function': True, 'eval_tf_function': True, 'eval_tf_while_loop': False, 'allow_tpu_summary': False, 'steps_per_loop': 10000, 'summary_interval': 10000, 'checkpoint_interval': 10000, 'max_to_keep': 5, 'continuous_eval_timeout': 3600, 'train_steps': 375625, 'validation_steps': 5000, 'validation_interval': 20000, 'best_checkpoint_export_subdir': '', 'best_checkpoint_eval_metric': '', 'best_checkpoint_metric_comp': 'higher', 'loss_upper_bound': 1000000.0, 'recovery_begin_steps': 0, 'recovery_max_trials': 0}, 'runtime': {'distribution_strategy': 'mirrored', 'enable_xla': False, 'gpu_thread_mode': None, 'dataset_num_private_threads': None, 'per_gpu_thread_count': 0, 'tpu': None, 'num_gpus': 1, 'worker_hosts': None, 'task_index': -1, 'all_reduce_alg': None, 'num_packs': 1, 'mixed_precision_dtype': 'float16', 'loss_scale': None, 'run_eagerly': False, 'batchnorm_spatial_persistent': False, 'num_cores_per_replica': 1, 'default_shard_dim': -1}}
defaultdict(<class 'list'>, {'3': ['box_loss', 'class_loss', 'conf_loss', 'recall50', 'precision50', 'avg_iou', 'avg_obj'], '4': ['box_loss', 'class_loss', 'conf_loss', 'recall50', 'precision50', 'avg_iou', 'avg_obj'], '5': ['box_loss', 'class_loss', 'conf_loss', 'recall50', 'precision50', 'avg_iou', 'avg_obj'], 'global': ['total_loss']})
[[12.0, 16.0], [19.0, 36.0], [40.0, 28.0], [36.0, 75.0], [76.0, 55.0], [72.0, 146.0], [142.0, 110.0], [192.0, 243.0], [459.0, 401.0]]
{'num_classes': 80, 'input_size': [640, 640, 3], 'min_level': 3, 'max_level': 5, 'boxes_per_scale': 3, 'base': {'type': None}, 'subdivisions': 1, 'filter': {'min_level': 3, 'max_level': 5, 'ignore_thresh': {'3': 0.7, '4': 0.7, '5': 0.7, 'all': None}, 'truth_thresh': {'3': 1.0, '4': 1.0, '5': 1.0, 'all': None}, 'loss_type': {'3': 'ciou', '4': 'ciou', '5': 'ciou', 'all': 'ciou'}, 'iou_normalizer': {'3': 0.75, '4': 0.75, '5': 0.75, 'all': 0.05}, 'cls_normalizer': {'3': 1.0, '4': 1.0, '5': 1.0, 'all': 0.5}, 'obj_normalizer': {'3': 4.0, '4': 1.0, '5': 0.4, 'all': None}, 'max_delta': {'3': inf, '4': inf, '5': inf, 'all': None}, 'new_cords': {'3': True, '4': True, '5': True, 'all': True}, 'scale_xy': {'3': 2.0, '4': 2.0, '5': 2.0, 'all': 2.0}, 'path_scales': {'3': 8, '4': 16, '5': 32}, 'objectness_smooth': {'3': 0.0, '4': 0.0, '5': 0.0, 'all': 1.0}, 'nms_type': 'greedy', 'iou_thresh': 0.1, 'nms_thresh': 0.65, 'max_boxes': 200, 'pre_nms_points': 5000, 'label_smoothing': 0.0, 'anchor_generation_scale': 512, 'use_scaled_loss': True, 'darknet': None}, 'norm_activation': {'activation': 'mish', 'use_sync_bn': True, 'norm_momentum': 0.99, 'norm_epsilon': 0.001}, 'boxes': ['[12.0, 16.0]', '[19.0, 36.0]', '[40.0, 28.0]', '[36.0, 75.0]', '[76.0, 55.0]', '[72.0, 146.0]', '[142.0, 110.0]', '[192.0, 243.0]', '[459.0, 401.0]'], 'smart_bias': True}
InputSpec(shape=(None, 640, 640, 3), ndim=4)
<tensorflow.python.keras.regularizers.L2 object at 0x7f5a3446da90>
